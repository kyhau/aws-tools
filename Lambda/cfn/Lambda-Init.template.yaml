AWSTemplateFormatVersion: '2010-09-09'
Description: >-
  Create Lambda function with dummy content, execution role and log group.

Parameters:
  FunctionName:
    Description: Name of the Lambda function to be created or updated.
    Type: String
  LogRetention:
    Description: Days to keep application logs
    Type: Number
    Default: 1

Resources:
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      RoleName: !Sub ${FunctionName}-ExecutionRole

  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: |
          def lambda_handler(event, context):
              # This function will be updated through CI/CD
              return "Hello from Lambda!"
      Description: TODO
      FunctionName: !Ref FunctionName
      Handler: index.lambda_handler
      MemorySize: 1024
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: python3.12
      Timeout: 30
      TracingConfig:
        Mode: Active

  LambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${LambdaFunction}
      RetentionInDays: !Ref LogRetention

Outputs:
  FunctionName:
    Description: Lambda function name
    Value: !Ref LambdaFunction
  LambdaFunctionArn:
    Description: The ARN of the Lambda function
    Value: !GetAtt LambdaFunction.Arn
