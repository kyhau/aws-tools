AWSTemplateFormatVersion: '2010-09-09'
Description: Creating CloudFront Web Distribution with S3 using S3 Origin.
Parameters:
  BucketRootLogName:
    Description: The name of the existing S3 bucket for logging (see S3-RootLogs.template).
    Type: String
    Default: my-app-root-logs
  CloudFrontPriceClass:
    Description: The price class that corresponds with the maximum price that you
      want to pay for CloudFront service.
    Type: String
    AllowedValues:
      - PriceClass_100
      - PriceClass_200
      - PriceClass_All
    Default: PriceClass_100
  DefaultTTL:
    Description: The default time in seconds that objects stay in CloudFront caches
      before CloudFront forwards another request to your custom origin to determine
      whether the object has been updated.
    Type: String
    Default: '3600'
  DeployGroup:
    Description: Existing IAM Group for CI to run tests and do deployment
    Type: String
  ErrorDoc:
    Description: The file name of the error document (e.g. error.html).
    Type: String
    Default: index.html
  IAMCertificateId:
    Description: Custom SSL certificate to use with CloudFront distribution.
    Type: String
  IndexDoc:
    Description: The file name of the index document (e.g. index.html).
    Type: String
    Default: index.html
  MaxTTL:
    Description: The maximum time in seconds that objects stay in CloudFront caches
      before CloudFront forwards another request to your custom origin to determine
      whether the object has been updated.
    Type: String
    Default: '86400'
  MinTTL:
    Description: The minimum amount of time that you want objects to stay in the cache
      before CloudFront queries your origin to see whether the object has been updated.
    Type: String
    Default: '0'
  StageName:
    Description: Stage name of the site. See Mappings defined in the template for
      the bucket name and the website url.
    Type: String
    AllowedValues:
      - stage
      - prod
    Default: stage
Mappings:
  StageMap:
    prod:
      BillingTag: PROD
      CloudFrontAlias1: api-prod.example.com
      CloudFrontAlias2: api.example.com
      CloudFrontOAI: ''
      CloudFrontCUI: ''
      SubBucketName: api-prod
      RootBucketName: api-prod-example-com
    stage:
      BillingTag: STAGE
      CloudFrontAlias1: api-stage.example.com
      CloudFrontAlias2: ''
      CloudFrontOAI: ''
      CloudFrontCUI: ''
      SubBucketName: api-stage
      RootBucketName: api-stage-example-com
Conditions:
  IsProduction: !Equals
    - prod
    - !Ref 'StageName'
  UseCustomSSLCertificate: !Not
    - !Equals
      - !Ref 'IAMCertificateId'
      - ''
Resources:
  RootBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !FindInMap
        - StageMap
        - !Ref 'StageName'
        - RootBucketName
      WebsiteConfiguration:
        IndexDocument: !Ref 'IndexDoc'
        ErrorDocument: !Ref 'ErrorDoc'
      LoggingConfiguration:
        DestinationBucketName: !Ref 'BucketRootLogName'
        LogFilePrefix: !Join
          - /
          - - !FindInMap
              - StageMap
              - !Ref 'StageName'
              - SubBucketName
            - s3
      VersioningConfiguration:
        Status: Suspended
      Tags:
        - Key: Billing
          Value: !FindInMap
            - StageMap
            - !Ref 'StageName'
            - BillingTag
    DeletionPolicy: Delete
  StaticSiteBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref 'RootBucket'
      PolicyDocument:
        Statement:
          - Sid: Grant a CloudFront OAI access to support private content
            Action:
              - s3:GetObject
            Effect: Allow
            Principal:
              CanonicalUser: !FindInMap
                - StageMap
                - !Ref 'StageName'
                - CloudFrontCUI
            Resource: !Join
              - ''
              - - 'arn:aws:s3:::'
                - !FindInMap
                  - StageMap
                  - !Ref 'StageName'
                  - RootBucketName
                - /*
  DeployPolicy:
    Type: AWS::IAM::ManagedPolicy
    DependsOn:
      - RootBucket
    Properties:
      Description: Managed Policy for deployment (S3 and CloudFront)
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - s3:ListBucket
            Effect: Allow
            Resource: !Join
              - ''
              - - 'arn:aws:s3:::'
                - !FindInMap
                  - StageMap
                  - !Ref 'StageName'
                  - RootBucketName
          - Action:
              - s3:PutObject
              - s3:GetObject
              - s3:DeleteObject
              - S3:ListObjects
            Effect: Allow
            Resource: !Join
              - ''
              - - 'arn:aws:s3:::'
                - !FindInMap
                  - StageMap
                  - !Ref 'StageName'
                  - RootBucketName
                - /*
          - Action:
              - CloudFront:CreateInvalidation
            Effect: Allow
            Resource: '*'
      Groups:
        - !Ref 'DeployGroup'
  CloudFront:
    Type: AWS::CloudFront::Distribution
    DependsOn:
      - RootBucket
    Properties:
      DistributionConfig:
        Aliases: !If
          - IsProduction
          - - !FindInMap
              - StageMap
              - !Ref 'StageName'
              - CloudFrontAlias1
            - !FindInMap
              - StageMap
              - !Ref 'StageName'
              - CloudFrontAlias2
          - - !FindInMap
              - StageMap
              - !Ref 'StageName'
              - CloudFrontAlias1
        CustomErrorResponses:
          - ErrorCode: 403
            ResponsePagePath: /index.html
            ResponseCode: 200
            ErrorCachingMinTTL: 300
        DefaultCacheBehavior:
          TargetOriginId: !Join
            - '-'
            - - S3
              - !FindInMap
                - StageMap
                - !Ref 'StageName'
                - RootBucketName
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods:
            - DELETE
            - GET
            - HEAD
            - OPTIONS
            - PATCH
            - POST
            - PUT
          ForwardedValues:
            QueryString: false
          MinTTL: !Ref 'MinTTL'
          MaxTTL: !Ref 'MaxTTL'
          DefaultTTL: !Ref 'DefaultTTL'
          Compress: true
        DefaultRootObject: !Ref 'IndexDoc'
        Enabled: true
        Logging:
          IncludeCookies: false
          Bucket: !Join
            - ''
            - - !Ref 'BucketRootLogName'
              - .s3.amazonaws.com
          Prefix: !Join
            - /
            - - !FindInMap
                - StageMap
                - !Ref 'StageName'
                - SubBucketName
              - cf
        Origins:
          - DomainName: !Join
              - ''
              - - !FindInMap
                  - StageMap
                  - !Ref 'StageName'
                  - RootBucketName
                - .s3.amazonaws.com
            Id: !Join
              - '-'
              - - S3
                - !FindInMap
                  - StageMap
                  - !Ref 'StageName'
                  - RootBucketName
            S3OriginConfig:
              OriginAccessIdentity: !Join
                - ''
                - - origin-access-identity/cloudfront/
                  - !FindInMap
                    - StageMap
                    - !Ref 'StageName'
                    - CloudFrontOAI
        HttpVersion: http2
        PriceClass: !Ref 'CloudFrontPriceClass'
        ViewerCertificate:
          CloudFrontDefaultCertificate: !Ref 'AWS::NoValue'
          IamCertificateId: !If
            - UseCustomSSLCertificate
            - !Ref 'IAMCertificateId'
            - !Ref 'AWS::NoValue'
          MinimumProtocolVersion: !If
            - UseCustomSSLCertificate
            - TLSv1
            - !Ref 'AWS::NoValue'
          SslSupportMethod: !If
            - UseCustomSSLCertificate
            - sni-only
            - !Ref 'AWS::NoValue'
Outputs:
  CloudFrontDistributionID:
    Value: !Ref 'CloudFront'
    Description: CloudFront distribution ID
  CloudFrontURL:
    Value: !GetAtt 'CloudFront.DomainName'
    Description: URL for CloudFront distribution
  RootBucketUrl:
    Value: !GetAtt 'RootBucket.WebsiteURL'
    Description: URL for website hosted on S3
