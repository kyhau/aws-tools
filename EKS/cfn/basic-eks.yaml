AWSTemplateFormatVersion: 2010-09-09
Description: Basic EKS Cluster

Parameters:
  ClusterInstanceType:
    Type: String
    Default: t3.medium
  ClusterSubnets:
    Type: List<AWS::EC2::Subnet::Id>
  VpcId:
    Type: AWS::EC2::VPC::Id

Resources:
  EKSClusterRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - eks.amazonaws.com
            Action:
              - sts:AssumeRole
      Description: EKS Cluster Role
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
        - arn:aws:iam::aws:policy/AmazonEKSServicePolicy

  EKSCluster:
    Type: AWS::EKS::Cluster
    Properties:
      Name: !Sub development-${AWS::StackName}
      Version: '1.21'
      RoleArn: !GetAtt EKSClusterRole.Arn
      ResourcesVpcConfig:
        SecurityGroupIds:
          - !Ref ControlPlaneSG
        SubnetIds: !Ref ClusterSubnets

  ControlPlaneSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group ControlPlane/NodegGroups
      VpcId: !Ref VpcId
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: -1
        - CidrIpv6: ::/0
          IpProtocol: -1

  ControlPlaneSGIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref ControlPlaneSG
      SourceSecurityGroupId: !Ref ControlPlaneSG
      IpProtocol: -1

  EKSNodeRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Description: EKS Node Role
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
        - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
        - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy

  EKSNodegroup:
    Type: AWS::EKS::Nodegroup
    DependsOn: EKSCluster
    Properties:
      ClusterName: !Sub development-${AWS::StackName}
      NodeRole: !GetAtt EKSNodeRole.Arn
      InstanceTypes:
        - !Ref ClusterInstanceType
      ScalingConfig:
        MinSize: 0
        DesiredSize: 0
        MaxSize: 2
      Labels:
        Key1: Value1
        Key2: Value2
      Subnets: !Ref ClusterSubnets

Outputs:
  KubeEndpoint:
    Value: !GetAtt EKSCluster.Endpoint
    Description: The endpoint for your Kubernetes API
