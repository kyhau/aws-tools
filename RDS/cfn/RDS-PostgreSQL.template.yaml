AWSTemplateFormatVersion: '2010-09-09'
Description: >-
  Create RDS PostgreSQL with PostGIS instance and a Read-Write managed
  policy attached.
Parameters:
  DBVpc:
    Description: The ID of the VPC for the DB / DB SG.
    Type: AWS::EC2::VPC::Id
  DBAllowedCidrBlock:
    Description: >-
      The CIDR block prefix (eg: 61.2) of the VPC for the DB / DB SG.
      Assumes (32.0/24 + 33.0/24) are free subnet blocks that will be created
      for Multi AZ RDS
    Type: String
    Default: '61.2'
    AllowedPattern: (\d{1,3})\.(\d{1,3})
    MinLength: '3'
    MaxLength: '7'
  DBSub1Zone:
    Description: >-
      The availability zone for subnet 1 to create (must have 2 different
      zones for Multi AZ).
    Type: AWS::EC2::AvailabilityZone::Name
    Default: ap-southeast-2a
  DBSub2Zone:
    Description: >-
      The availability zone for subnet 1 to create (must have 2 different
      zones for Multi AZ).
    Type: AWS::EC2::AvailabilityZone::Name
    Default: ap-southeast-2b
  DBName:
    Type: String
    Description: >-
      The unique name of the PSQL + GIS DB to be created with the managed
      policies attached.
    Default: postgres
  DBClass:
    Type: String
    Description: The name of the compute and memory capacity classes of the DB instance.
    Default: db.t3.medium
  DBTag:
    Type: String
    Description: Tag for the DB / DB SG.
    Default: postgres-test
  DBAdmin:
    Type: String
    Description: Master / Admin user name.
    Default: admin
  DBAdminPass:
    Type: String
    Description: Master / Admin user password.
    MinLength: '8'
    NoEcho: true
  DBPort:
    Type: Number
    Description: DB service port.
    Default: 5432
Resources:
  PSQLVPCSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Join [ '', ['SG for RDS ', !Ref DBName, ' in VPC: ', !Ref DBVpc] ]
      VpcId: !Ref DBVpc
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: !Ref DBPort
          ToPort: !Ref DBPort
          CidrIp: !Join ['.', [!Ref DBAllowedCidrBlock, '0.0/16']]
      Tags:
        - Key: DBTag
          Value: !Ref DBTag
        - Key: Name
          Value: !Join ['-', [!Ref DBAllowedCidrBlock, DB, !Ref DBName]]
  PSQLSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Ref 'DBSub1Zone'
      CidrBlock: !Join ['.', [!Ref DBAllowedCidrBlock, '32.0/24']]
      VpcId: !Ref DBVpc
      Tags:
        - Key: DBTag
          Value: !Ref DBTag
        - Key: Name
          Value: !Join ['-', [!Ref DBAllowedCidrBlock, DB, !Ref DBName, Subnet1]]
  PSQLSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Ref 'DBSub2Zone'
      CidrBlock: !Join ['.', [!Ref DBAllowedCidrBlock, '33.0/24']]
      VpcId: !Ref DBVpc
      Tags:
        - Key: DBTag
          Value: !Ref DBTag
        - Key: Name
          Value: !Join ['-', [!Ref DBAllowedCidrBlock, DB, !Ref DBName, Subnet2]]
  PSQLDBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: !Join ['', ['Subnet group (32.0/24+33.0/24) for RDS ', !Ref DBName, ' in VPC: ', !Ref DBVpc]]
      SubnetIds:
        - !Ref PSQLSubnet1
        - !Ref PSQLSubnet2
  PSQLGisDB:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: '20'
      BackupRetentionPeriod: 30
      DBInstanceClass: !Ref DBClass
      DBInstanceIdentifier: !Ref DBName
      DBName: !Ref DBName
      DBSubnetGroupName: !Ref PSQLDBSubnetGroup
      EnablePerformanceInsights: true
      Engine: postgres
      EngineVersion: '11.5'
      LicenseModel: postgresql-license
      MasterUsername: !Ref DBAdmin
      MasterUserPassword: !Ref DBAdminPass
      MultiAZ: true
      PerformanceInsightsRetentionPeriod: 7
      PreferredBackupWindow: '09:00-10:00'
      PreferredMaintenanceWindow: Sat:11:00-Sun:00:00
      PubliclyAccessible: false
      StorageType: gp2
      VPCSecurityGroups:
        - !Ref PSQLVPCSecGroup
Outputs:
  DBEndpoint:
    Description: The DB endpoint for VPC accessible resources.
    Value: !GetAtt PSQLGisDB.Endpoint.Address
  DBPort:
    Description: The DB port for VPC accessible resources.
    Value: !GetAtt PSQLGisDB.Endpoint.Port
