AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Create Cognito User Pool, Identity Pool, User Pool Clients and a DynamoDB for login trail.

Parameters:
  IdentityPoolName:
    Description: The name of your Amazon Cognito identity pool.
    Type: String
    Default: CognitoAlphaIdentityPool
  UserPoolName:
    Description: The name of your Amazon Cognito user pool.
    Type: String
    Default: CognitoAlphaUserPool
  LoginTrailTableName:
    Description: The name of your DynamoDB Table for recording login activities.
    Type: String
    Default: CognitoAlphaLoginTrail
  ReplyToEmailAddress:
    Description: The REPLY-TO email address.
    Type: String
  AppClientName:
    Description: The client name for the user pool client
    Type: String
    Default: CognitoAlphaClient
  AppClientRefreshTokenValidity:
    Description: The time limit, in days, after which the refresh token is no longer valid.
    Type: Number
    Default: 30

Resources:
  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: !Ref UserPoolName
      AliasAttributes: []
      AutoVerifiedAttributes:
        - email
      Schema:
        - Name: email
          AttributeDataType: String
          DeveloperOnlyAttribute: false
          Mutable: true
          StringAttributeConstraints:
            MaxLength: '2048'
            MinLength: '5'
          Required: true
        - Name: family_name
          AttributeDataType: String
          DeveloperOnlyAttribute: false
          Mutable: true
          StringAttributeConstraints:
            MaxLength: '2048'
            MinLength: '1'
          Required: false
        - Name: given_name
          AttributeDataType: String
          DeveloperOnlyAttribute: false
          Mutable: true
          StringAttributeConstraints:
            MaxLength: '2048'
            MinLength: '1'
          Required: false
      Policies:
        PasswordPolicy:
          MinimumLength: 14
          RequireLowercase: false
          RequireNumbers: false
          RequireSymbols: false
          RequireUppercase: false
      EmailVerificationSubject: Welcome
      EmailVerificationMessage: Your verification code is {####}.
      EmailConfiguration:
        ReplyToEmailAddress: !Ref ReplyToEmailAddress
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false
        UnusedAccountValidityDays: 8
        InviteMessageTemplate:
          EmailSubject: Welcome
          EmailMessage: A new account has been created for you. Your login name is
            {username} and temporary password is {####}. You will be asked to select
            a new password when you first log in.
      UserPoolTags:
        Service: Cognito

  UserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: !Ref AppClientName
      UserPoolId: !Ref UserPool
      RefreshTokenValidity: !Ref AppClientRefreshTokenValidity
      GenerateSecret: false

  IdentityPool:
    Type: AWS::Cognito::IdentityPool
    Properties:
      IdentityPoolName: !Ref IdentityPoolName
      AllowUnauthenticatedIdentities: false
      CognitoIdentityProviders:
        - ClientId: !Ref UserPoolClient
          ProviderName: !GetAtt UserPool.ProviderName

  AuthRole:
    Type: AWS::IAM::Role
    DependsOn:
      - DynamoDBTable
    Properties:
      RoleName: !Sub "${IdentityPoolName}-AuthRole"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Federated: cognito-identity.amazonaws.com
            Action: sts:AssumeRoleWithWebIdentity
            Condition:
              StringEquals:
                cognito-identity.amazonaws.com:aud: !Ref IdentityPool
              ForAnyValue:StringLike:
                cognito-identity.amazonaws.com:amr: authenticated
      Policies:
        - PolicyName: !Sub "${IdentityPoolName}-AuthRolePolicy"
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - mobileanalytics:PutEvents
                  - cognito-sync:*
                  - cognito-identity:*
                Resource: !Sub "arn:aws:cognito-identity:${AWS::Region}:${AWS::AccountId}:identitypool/${IdentityPool}"
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                  - dynamodb:BatchGetItem
                  - dynamodb:Query
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                  - dynamodb:DeleteItem
                Resource: !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${LoginTrailTableName}"
                Condition:
                  ForAllValues:StringEquals:
                    dynamodb:LeadingKeys:
                      - ${cognito-identity.amazonaws.com:sub}

  UnauthRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${IdentityPoolName}-UnauthRole"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Federated: cognito-identity.amazonaws.com
            Action: sts:AssumeRoleWithWebIdentity
            Condition:
              StringEquals:
                cognito-identity.amazonaws.com:aud: !Ref IdentityPool
              ForAnyValue:StringLike:
                cognito-identity.amazonaws.com:amr: unauthenticated
      Policies:
        - PolicyName: !Sub "${IdentityPoolName}-UnauthRolePolicy"
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - mobileanalytics:PutEvents
                  - cognito-sync:*
                Resource: !Sub "arn:aws:cognito-identity:${AWS::Region}:${AWS::AccountId}:identitypool/${IdentityPool}"

  IdentityPoolRoleAttachment:
    Type: AWS::Cognito::IdentityPoolRoleAttachment
    Properties:
      IdentityPoolId: !Ref IdentityPool
      Roles:
        authenticated: !GetAtt AuthRole.Arn
        unauthenticated: !GetAtt UnauthRole.Arn
  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Ref LoginTrailTableName
      AttributeDefinitions:
        - AttributeName: userId
          AttributeType: S
        - AttributeName: activityDate
          AttributeType: S
      KeySchema:
        - AttributeName: userId
          KeyType: HASH
        - AttributeName: activityDate
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
Outputs:
  UserPoolId:
    Value: !Ref UserPool
    Description: The generated ID the Amazon Cognito user pool.
  UserPoolArn:
    Value: !GetAtt UserPool.Arn
    Description: The Amazon Resource Name (ARN) of the user pool.
  UserPoolClientId:
    Value: !Ref UserPoolClient
    Description: The generated ID the Amazon Cognito user pool client.
  IdentityPoolId:
    Value: !Ref IdentityPool
    Description: The generated ID the Amazon Cognito identity pool.
  IdentityPoolName:
    Value: !GetAtt IdentityPool.Name
    Description: The name of the identity pool.
