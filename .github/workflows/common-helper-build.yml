name: Common Helper - Build

run-name: Common Helper @ ${{ github.ref_name }}

on:
  push:
    branches: [main, master]
    paths:
      - .github/workflows/common-helper-build.yml
      - _common/helper/**
      - _common/tests/**
      - _common/Makefile
      - _common/poetry.lock
      - _common/pyproject.toml
  pull_request:
    branches: [main, master]
    paths:
      - .github/workflows/common-helper-build.yml
      - _common/helper/**
      - _common/tests/**
      - _common/Makefile
      - _common/poetry.lock
      - _common/pyproject.toml
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash
    working-directory: _common

jobs:
  lint:
    name: Lint code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.13"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Lint Python
        run: make lint-python

  test:
    needs: lint
    name: Test Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]

    steps:
      - name: Checkout sources
        uses: actions/checkout@v5

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: _common/.venv
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('_common/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: make install-test

      - name: Install project
        run: poetry install --no-interaction

      - name: Run pip check
        run: poetry run pip check

      - name: Run tests with coverage
        if: matrix.python-version == '3.13'
        run: make test-with-coverage

      - name: Run tests without coverage
        if: matrix.python-version != '3.13'
        run: make test

      - name: Upload coverage to Codecov
        if: matrix.python-version == '3.13'
        uses: codecov/codecov-action@v5
        with:
          files: _common/coverage.xml
          flags: helper
          name: codecov-helper
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}

  build:
    needs: test
    name: Build package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.13"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Install dependencies
        run: make install-all

      - name: Build package
        run: make build
