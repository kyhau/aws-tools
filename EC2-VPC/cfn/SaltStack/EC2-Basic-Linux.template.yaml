AWSTemplateFormatVersion: '2010-09-09'
Description: Create a EC2 instance (Linux).
Parameters:
  EC2Name:
    Description: EC2 Name.
    Type: String
  EC2HostName:
    Description: Hostname of the EC2 instance (will be written into /etc/hostname).
    Type: String
  AMI:
    Description: The AMI ID of the image that the EC2 instance to be created from
      (check and update to use the latest Ubuntu).
    Type: AWS::EC2::Image::Id
    Default: ami-4e686b2d
  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t2.medium
  VolumeType:
    Description: The volume type. This can be gp2 for General Purpose SSD, or standard
      for Magnetic volume (add io1 for Provisioned IOPS SSD, st1 for Throughput Optimized
      HDD, sc1 for Cold HDD, if needed).
    Type: String
    Default: gp2
    AllowedValues:
      - standard
      - gp2
  VolumeSize:
    Description: The size of the volume, in gibibytes (GiBs).
    Type: Number
    Default: '10'
  DeleteOnTermination:
    Description: Delete on termination.
    Type: String
    Default: false
    AllowedValues:
      - true
      - false
  InstanceRole:
    Description: Instance IAM Role.
    Type: String
    Default: devops
  SubnetID:
    Description: Subnet ID.
    Type: AWS::EC2::Subnet::Id
  SecurityGroupID:
    Description: Security Group ID.
    Type: AWS::EC2::SecurityGroup::Id
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  SaltMasterHost:
    Description: Optional. Hostname (or private IP) of the Salt Master.
    Type: String
    Default: ''
  SaltVersion:
    Description: Optional. Salt-minion version to be installed.
    Type: String
    Default: 2017.7.3
  ServiceTag:
    Description: Value of the tag Service
    Type: String
    Default: vm
    AllowedValues:
      - vm
      - openvpn
    ConstraintDescription: must be a predefined Tag.
Conditions:
  SaltEnabled: !And
    - !Not
      - !Equals
        - ''
        - !Ref 'SaltMasterHost'
    - !Not
      - !Equals
        - ''
        - !Ref 'SaltVersion'
Resources:
  EC2Instance:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: EC2
    Properties:
      DisableApiTermination: false
      InstanceInitiatedShutdownBehavior: stop
      ImageId: !Ref 'AMI'
      InstanceType: !Ref 'InstanceType'
      IamInstanceProfile: !Ref 'InstanceRole'
      KeyName: !Ref 'KeyName'
      Monitoring: false
      UserData: !Base64
        Fn::Join:
          - ''
          - - "#!/bin/bash -xe\n"
            - 'sudo hostname '
            - !Ref 'EC2HostName'
            - "\n"
            - 'sed -i ''1i 127.0.0.1 '
            - !Ref 'EC2HostName'
            - " ' /etc/hosts\n"
            - 'echo '
            - !Ref 'EC2HostName'
            - " > /etc/hostname\n"
            - "hostname -F /etc/hostname\n"
            - !If
              - SaltEnabled
              - !Join
                - ''
                - - wget -O - https://repo.saltstack.com/apt/ubuntu/16.04/amd64/latest/SALTSTACK-GPG-KEY.pub
                    | sudo apt-key add -
                  - "\n"
                  - sudo echo 'deb http://repo.saltstack.com/apt/ubuntu/16.04/amd64/latest
                    xenial main' > /etc/apt/sources.list.d/saltstack.list
                  - "\n"
                  - sudo echo 'deb http://repo.saltstack.com/apt/ubuntu/16.04/amd64/archive/
                  - !Ref 'SaltVersion'
                  - ' xenial main'' >> /etc/apt/sources.list.d/saltstack.list'
                  - "\n"
                  - sudo apt-get update
                  - "\n"
                  - sudo apt-get install -y salt-minion=
                  - !Ref 'SaltVersion'
                  - +ds-1 salt-common=
                  - !Ref 'SaltVersion'
                  - +ds-1
                  - "\n"
                  - 'sed -i -e ''s/#master: salt/master: '
                  - !Ref 'SaltMasterHost'
                  - "/g' /etc/salt/minion\n"
                  - "service salt-minion restart\n"
              - !Ref 'AWS::NoValue'
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeleteOnTermination: true
          Description: Primary network interface
          DeviceIndex: '0'
          GroupSet:
            - !Ref 'SecurityGroupID'
          SubnetId: !Ref 'SubnetID'
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeType: !Ref 'VolumeType'
            VolumeSize: !Ref 'VolumeSize'
            DeleteOnTermination: !Ref 'DeleteOnTermination'
      Tags:
        - Key: Application
          Value: !Ref 'AWS::StackName'
        - Key: Name
          Value: !Ref 'EC2Name'
        - Key: Inspect
          Value: ALL
        - Key: Service
          Value: !Ref 'ServiceTag'
  IPAddress:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      InstanceId: !Ref 'EC2Instance'
Outputs:
  PublicIP:
    Description: The public IP address of the instance.
    Value: !GetAtt 'EC2Instance.PublicIp'
  PrivateIP:
    Description: The private IP address of the instance.
    Value: !GetAtt 'EC2Instance.PrivateIp'
