AWSTemplateFormatVersion: "2010-09-09"
Description: >
  Launch a CloudFront web distribution to serve content from a single S3 origin,
  with OAI for origin access control.

Parameters:
  AppBucketName:
    Description: Name of the s3 bucket to create for website source files.
    Type: String
  LogsBucketName:
    Description: Bucket name for the application logging.
    Type: String

Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref AppBucketName
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerEnforced
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete

  LogsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref LogsBucketName
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerPreferred
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
      LifecycleConfiguration:
        Rules:
          - Id: DeleteContentAfter1Day
            Status: Enabled
            ExpirationInDays: 1
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete

  CloudFrontOAI:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Sub ${S3Bucket}-origin-access-identity

  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Statement:
          -
            Sid: AllowCloudFrontAccessIdentity
            Effect: Allow
            Action:
              - s3:GetObject
            Resource: !Sub arn:${AWS::Partition}:s3:::${S3Bucket}/*
            Principal:
              AWS: !Sub arn:${AWS::Partition}:iam::cloudfront:user/CloudFront Origin Access Identity ${CloudFrontOAI}

  CFDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
          - DomainName: !GetAtt S3Bucket.DomainName
            Id: !Sub ${S3Bucket}S3OriginId
            S3OriginConfig:
              OriginAccessIdentity: !Sub origin-access-identity/cloudfront/${CloudFrontOAI}
        Comment: !Sub CloudFront origin for ${AppBucketName}
        CustomErrorResponses:
          - ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: /index.html
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          DefaultTTL: 900
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
          MaxTTL: 900
          MinTTL: 0
          TargetOriginId: !Sub ${S3Bucket}S3OriginId
          ViewerProtocolPolicy: redirect-to-https
        DefaultRootObject: index.html
        Enabled: true
        HttpVersion: http2
        Logging:
          Bucket: !Sub ${LogsBucket}.s3.amazonaws.com
          IncludeCookies: false
          Prefix: cloudfront
        PriceClass: PriceClass_100
        ViewerCertificate:
          CloudFrontDefaultCertificate: true

Outputs:
  CFDistributionDomainName:
    Description: CloudFront distribution domain name
    Value: !GetAtt CFDistribution.DomainName
  CFDistributionID:
    Description: CloudFront distribution ID
    Value: !Ref CFDistribution
