AWSTemplateFormatVersion: "2010-09-09"
Description: >
  Launch a CloudFront web distribution to serve content from a single S3 origin, multiple behaviours,
  with OAC for origin access control.

Parameters:
  AppBucketName:
    Description: Name of the s3 bucket to create for website source files.
    Type: String
  AppBucketPathPattern1:
    Description: >
      The path pattern to be added to CloudFront Behaviours to route to the origin.
      E.g. the path pattern "images/*.jpg" routes all requests for ".jpg" files in
      the images directory and in all subdirectories below the images directory to
      S3 bucket or the web server that you specify in Origin.
    Type: String
  AppBucketPathPattern2:
    Description: >
      The path pattern to be added to CloudFront Behaviours to route to the origin.
    Type: String
  LogsBucketName:
    Description: Bucket name for the application logging.
    Type: String

Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref AppBucketName
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerEnforced
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete

  LogsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref LogsBucketName
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerPreferred
      LifecycleConfiguration:
        Rules:
          - Id: DeleteContentAfter1Day
            Status: Enabled
            ExpirationInDays: 1
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete

  CloudFrontOriginAccessControl:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Description: Default Origin Access Control
        Name: !Ref AWS::StackName
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4

  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Statement:
          -
            Sid: AllowCloudFrontServicePrincipal
            Effect: Allow
            Action:
              - s3:GetObject
            Resource: !Sub arn:${AWS::Partition}:s3:::${S3Bucket}/*
            Principal:
              Service: cloudfront.amazonaws.com
            Condition:
              StringEquals:
                AWS:SourceArn: !Sub arn:${AWS::Partition}:cloudfront::${AWS::AccountId}:distribution/${CFDistribution}

  CFDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
          - DomainName: !GetAtt S3Bucket.DomainName
            Id: !Sub ${S3Bucket}S3OriginId
            S3OriginConfig:
              OriginAccessIdentity: ""
            OriginAccessControlId: !GetAtt CloudFrontOriginAccessControl.Id

        CacheBehaviors:
          - AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
            DefaultTTL: 900
            ForwardedValues:
              QueryString: false
              Cookies:
                Forward: none
            MaxTTL: 900
            MinTTL: 0
            PathPattern: !Ref AppBucketPathPattern1
            TargetOriginId: !Sub ${S3Bucket}S3OriginId
            ViewerProtocolPolicy: redirect-to-https

          - AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
            DefaultTTL: 900
            ForwardedValues:
              QueryString: false
              Cookies:
                Forward: none
            MaxTTL: 900
            MinTTL: 0
            PathPattern: !Ref AppBucketPathPattern2
            TargetOriginId: !Sub ${S3Bucket}S3OriginId
            ViewerProtocolPolicy: redirect-to-https

        Comment: !Sub CloudFront origin for ${AppBucketName}
        CustomErrorResponses:
          - ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: /index.html
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          DefaultTTL: 900
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
          MaxTTL: 900
          MinTTL: 0
          TargetOriginId: !Sub ${S3Bucket}S3OriginId
          ViewerProtocolPolicy: redirect-to-https
        DefaultRootObject: index.html
        Enabled: true
        HttpVersion: http2
        Logging:
          Bucket: !Sub ${LogsBucket}.s3.amazonaws.com
          IncludeCookies: false
          Prefix: cloudfront
        PriceClass: PriceClass_100
        ViewerCertificate:
          CloudFrontDefaultCertificate: true

Outputs:
  CFDistributionDomainName:
    Description: CloudFront distribution domain name
    Value: !GetAtt CFDistribution.DomainName
  CFDistributionID:
    Description: CloudFront distribution ID
    Value: !Ref CFDistribution
