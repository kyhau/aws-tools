AWSTemplateFormatVersion: "2010-09-09"
Description: CloudWatch monitoring config and custom metrics (Amazon Linux 2)

Parameters:
  AMI:
    Description: The AMI ID of the image that the EC2 instance to be created from
    Type: AWS::EC2::Image::Id
  AppName:
    Description: Application name
    Type: String
  Namespace:
    Description: CloudWatch Namspace, the container for CloudWatch metrics
    Type: String

Resources:
  CloudWatchConfig:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /app/${AppName}/${AWS::StackName}/cloudwatch-agent-config-linux
      Description: "CloudWatch config for linux"
      Type: String
      Value:
        Fn::Sub:
          - |
            {
              "logs": {
                "logs_collected": {
                  "files": {
                    "collect_list": [
                      {
                        "file_path": "/var/log/messages",
                        "log_group_name": "/app/${AppName}/var/log/messages"
                      },
                      {
                        "file_path": "/var/log/secure",
                        "log_group_name": "/app/${AppName}/var/log/secure"
                      },
                      {
                        "file_path": "/var/log/cloud-init.log",
                        "log_group_name": "/app/${AppName}/var/log/cloud-init.log"
                      },
                      {
                        "file_path": "/var/log/cloud-init-output.log",
                        "log_group_name": "/app/${AppName}/var/log/cloud-init-output.log"
                      },
                      {
                        "file_path": "/var/log/cfn-init.log",
                        "log_group_name": "/app/${AppName}/var/log/cfn-init.log"
                      },
                      {
                        "file_path": "/var/log/cfn-init-cmd.log",
                        "log_group_name": "/app/${AppName}/var/log/cfn-init-cmd.log"
                      },
                      {
                        "file_path": "/var/log/cfn-wire.log",
                        "log_group_name": "/app/${AppName}/var/log/cfn-wire.log"
                      }
                    ]
                  }
                }
              },
              "metrics": {
                "namespace": "${Namespace}",
                "append_dimensions": {
                  "AutoScalingGroupName": "${!aws:AutoScalingGroupName}",
                  "ImageId": "${!aws:ImageId}",
                  "InstanceId": "${!aws:InstanceId}",
                  "InstanceType": "${!aws:InstanceType}"
                },
                "metrics_collected": {
                  "mem": {
                    "measurement": [
                      "mem_used_percent"
                    ],
                    "metrics_collection_interval": 60
                  },
                  "swap": {
                    "measurement": [
                      swap_used_percent"
                    ],
                    "metrics_collection_interval": 60
                  },
                  "disk": {
                    "resources": ["/"],
                    "measurement": [
                      "total", "used", "free"
                    ],
                    "ignore_file_system_types": [
                      "sysfs", "devtmpfs"
                    ],
                    "metrics_collection_interval": 60
                  }
                }
              }
            }
          - { AppName: !Ref AppName }

  Instance:
    Type: AWS::EC2::Instance
    CreationPolicy:
      ResourceSignal:
        Timeout: PT60M
    Metadata:
      AWS::CloudFormation::Init:
        setupCfnHup:
          files:
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
                interval=1
              mode: '000400'
              owner: root
              group: root

            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfiguration.Metadata.AWS::CloudFormation::Init
                # action=/opt/aws/bin/cfn-init --verbose --stack=${AWS::StackName} --region=${AWS::Region} --resource=Instance --configsets ApplicationSetup
                runas=root
              mode: '000400'
              owner: root
              group: root

          services:
            sysvinit:
              cfn-hup:
                enabled: true
                ensureRunning: true
                files:
                  - '/etc/cfn/cfn-hup.conf'
                  - '/etc/cfn/hooks.d/cfn-auto-reloader.conf'
        configSets:
          EnvironmentSetup:
            - setupCfnHup
    Properties:
      ImageId: !Ref 'AMI'
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash -x
            ip_addr=`curl -sL http://169.254.169.254/latest/meta-data/local-ipv4`
            yum update -y
            yum install -y aws-cfn-bootstrap wget

            # Install CW agent
            wget https://s3.amazonaws.com/amazoncloudwatch-agent/linux/amd64/latest/AmazonCloudWatchAgent.zip
            unzip AmazonCloudWatchAgent.zip
            sudo ./install.sh
            /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -c ssm:/app/${AppName}/${AWS::StackName}/cloudwatch-agent-config-linux -s

            # Install the files and packages from the metadata
            /opt/aws/bin/cfn-init --verbose --stack=${AWS::StackName} --region=${AWS::Region} --resource=Instance --configsets EnvironmentSetup

            # Signal the status from cfn-init
            /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource Instance --region ${AWS::Region}

