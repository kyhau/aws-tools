AWSTemplateFormatVersion: '2010-09-09'
Description: Create base infrastructure including VPC, security groups for EC2s (Windows)
  and VPN.
Parameters:
  ProjectTag:
    Description: Project tag to be used for tagging related sources (e.g. 60-11-xxxx).
    Type: String
    Default: 60-11-xxxx
  VpcCIDRFirst2Parts:
    Description: The first 2 parts of the CIDR (e.g. 60.11) to be assigned to the
      VPC.
    Type: String
    MinLength: '3'
    MaxLength: '7'
    Default: '60.11'
    AllowedPattern: (\d{1,3})\.(\d{1,3})
    ConstraintDescription: must be in the form x.x
  VpcSubnetZone:
    Description: The Availability Zone of the default subnet.
    Type: AWS::EC2::AvailabilityZone::Name
    Default: ap-southeast-2a
Resources:
  ProjectVpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Join
        - ''
        - - !Ref 'VpcCIDRFirst2Parts'
          - .0.0/16
      InstanceTenancy: default
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Application
          Value: !Ref 'AWS::StackName'
        - Key: Name
          Value: !Ref 'ProjectTag'
  ProjectSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Join
        - ''
        - - !Ref 'VpcCIDRFirst2Parts'
          - .0.0/20
      AvailabilityZone: !Ref 'VpcSubnetZone'
      VpcId: !Ref 'ProjectVpc'
      Tags:
        - Key: Application
          Value: !Ref 'AWS::StackName'
        - Key: Name
          Value: !Join
            - '-'
            - - !Ref 'ProjectTag'
              - !Ref 'VpcSubnetZone'
  ProjectSubnetAclA:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId: !Ref 'ProjectNetworkAcl'
      SubnetId: !Ref 'ProjectSubnetA'
  ProjectInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Application
          Value: !Ref 'AWS::StackName'
        - Key: Name
          Value: !Ref 'ProjectTag'
  ProjectGatewayAttachment1:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref 'ProjectVpc'
      InternetGatewayId: !Ref 'ProjectInternetGateway'
  ProjectDopt:
    Type: AWS::EC2::DHCPOptions
    Properties:
      Tags:
        - Key: Application
          Value: !Ref 'AWS::StackName'
        - Key: Name
          Value: !Ref 'ProjectTag'
      DomainName: !Join
        - ''
        - - !Ref 'AWS::Region'
          - .compute.internal
      DomainNameServers:
        - AmazonProvidedDNS
  ProjectVpcDhcpOptionsAssociation1:
    Type: AWS::EC2::VPCDHCPOptionsAssociation
    Properties:
      VpcId: !Ref 'ProjectVpc'
      DhcpOptionsId: !Ref 'ProjectDopt'
  ProjectNetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref 'ProjectVpc'
      Tags:
        - Key: Application
          Value: !Ref 'AWS::StackName'
        - Key: Name
          Value: !Ref 'ProjectTag'
  ProjectNetworkAclEntry1:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: '0.0.0.0/0'
      Egress: true
      Protocol: -1
      RuleAction: allow
      RuleNumber: 100
      NetworkAclId: !Ref 'ProjectNetworkAcl'
  ProjectNetworkAclEntry2:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: '0.0.0.0/0'
      Protocol: -1
      RuleAction: allow
      RuleNumber: 100
      NetworkAclId: !Ref 'ProjectNetworkAcl'
  ProjectRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref 'ProjectVpc'
      Tags:
        - Key: Application
          Value: !Ref 'AWS::StackName'
        - Key: Name
          Value: !Ref 'ProjectTag'
  ProjectRouteIgw1:
    Type: AWS::EC2::Route
    DependsOn: ProjectGatewayAttachment1
    Properties:
      DestinationCidrBlock: '0.0.0.0/0'
      RouteTableId: !Ref 'ProjectRouteTable'
      GatewayId: !Ref 'ProjectInternetGateway'
  ProjectSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref 'ProjectRouteTable'
      SubnetId: !Ref 'ProjectSubnetA'
  VMSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref 'ProjectVpc'
      GroupDescription: !Ref 'ProjectTag'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3389
          ToPort: 3389
          CidrIp: !Join
            - ''
            - - !Ref 'VpcCIDRFirst2Parts'
              - .0.0/16
      SecurityGroupEgress:
        - IpProtocol: '-1'
          CidrIp: '0.0.0.0/0'
      Tags:
        - Key: Application
          Value: !Ref 'AWS::StackName'
        - Key: Name
          Value: !Ref 'ProjectTag'
  SgIngress1:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref 'VMSecurityGroup'
      IpProtocol: '-1'
      SourceSecurityGroupId: !Ref 'VMSecurityGroup'
      SourceSecurityGroupOwnerId: !Ref 'AWS::AccountId'
  VpnSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref 'ProjectVpc'
      GroupDescription: Security group for OpenVPN Server
      SecurityGroupIngress:
        - IpProtocol: icmp
          FromPort: 0
          ToPort: -1
          CidrIp: '0.0.0.0/0'
        - IpProtocol: icmp
          FromPort: 8
          ToPort: -1
          CidrIp: '0.0.0.0/0'
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Join
            - ''
            - - !Ref 'VpcCIDRFirst2Parts'
              - .0.0/20
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: '0.0.0.0/0'
        - IpProtocol: tcp
          FromPort: 943
          ToPort: 943
          CidrIp: '0.0.0.0/0'
        - IpProtocol: udp
          FromPort: 1194
          ToPort: 1194
          CidrIp: '0.0.0.0/0'
      SecurityGroupEgress:
        - IpProtocol: '-1'
          CidrIp: '0.0.0.0/0'
      Tags:
        - Key: Application
          Value: !Ref 'AWS::StackName'
        - Key: Name
          Value: !Join
            - '-'
            - - openvpn
              - !Ref 'ProjectTag'
