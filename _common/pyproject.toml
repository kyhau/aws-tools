[tool.poetry]
name = "helper"
version = "0.1.0-dev0"
description = "This package includes some common functions for local development"
authors = ["Kay Hau <virtualda@gmail.com>"]
readme = "README.md"
homepage = "https://github.com/kyhau/aws-tools/"
repository = "https://github.com/kyhau/aws-tools/"
license = "MIT"
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3 :: Only",
]
packages = [{include = "helper"}]

[tool.poetry.dependencies]
python = "^3.10"
boto3 = "1.35.19"
click = "8.1.7"
docker = "7.1.0"
InquirerPy = "0.3.4"
prompt-toolkit = ">=3.0.13"  # required by InquirerPy, pinned by Snyk to avoid a vulnerability
pyyaml = "6.0.2"
toml = "0.10.2"

[tool.poetry.group.dev.dependencies]
# Testing
pytest = "~8.3"
pytest-cov = "~5.0"
pytest-gitignore = "~1.3"
pytest-mock = "~3.14"
mock = "~5.1"
coverage = "~7.6"
cov-core = "~1.15"
codecov = "~2.1"
# Linting
flake8 = "~7.1"
# Build
setuptools = "~80.7"
wheel = "~0.45"
logilab-common = "~2.0"
pypandoc = "1.13"

[tool.poetry.scripts]
helper = "helper:main"
dockerc = "helper.docker:find_non_running_containers"
dockeri = "helper.docker:find_dangling_images"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# Pytest configuration
[tool.pytest.ini_options]
testpaths = ["helper/tests"]
norecursedirs = [".tox", "env", ".eggs", "dist", "build"]
xfail_strict = true
addopts = "--strict-markers"

# Coverage configuration
[tool.coverage.run]
source = ["helper"]
omit = [
    "setup.py",
    "*__init__.py",
    "*/tests/*",
    ".tox*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

# Flake8 configuration (flake8 doesn't read pyproject.toml natively, but included for reference)
# Still need to use tox.ini or setup.cfg for actual flake8 config

